{
  "db_name": "PostgreSQL",
  "query": "SELECT\n  id AS \"id: OrganizationId\",\n  updated_at,\n  created_at,\n  name,\n  OWNER AS \"owner: crate::models::user::UserId\",\n  default_role AS \"default_role: crate::models::role::RoleId\",\n  active,\n  _permission AS \"_permission!: filigree::auth::ObjectPermission\"\nFROM\n  organizations tb\n  JOIN LATERAL (\n    SELECT\n      CASE WHEN bool_or(permission IN ('org_admin', 'Organization::owner')) THEN\n        'owner'\n      WHEN bool_or(permission = 'Organization::write') THEN\n        'write'\n      WHEN bool_or(permission = 'Organization::read') THEN\n        'read'\n      ELSE\n        NULL\n      END _permission\n    FROM\n      permissions\n    WHERE\n      organization_id = $2\n      AND actor_id = ANY ($3)\n      AND permission IN ('org_admin', 'Organization::owner', 'Organization::write', 'Organization::read'))\n\t_permission ON _permission IS NOT NULL\nWHERE\n  tb.id = $1\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id: OrganizationId",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "updated_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 2,
        "name": "created_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 3,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "owner: crate::models::user::UserId",
        "type_info": "Uuid"
      },
      {
        "ordinal": 5,
        "name": "default_role: crate::models::role::RoleId",
        "type_info": "Uuid"
      },
      {
        "ordinal": 6,
        "name": "active",
        "type_info": "Bool"
      },
      {
        "ordinal": 7,
        "name": "_permission!: filigree::auth::ObjectPermission",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "UuidArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      null
    ]
  },
  "hash": "56110bfd38fc5602a6d3e3f1409daf902c5df639390ffe638b1ac8c2cc9b919b"
}
