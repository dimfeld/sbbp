name = "Video"
allow_id_in_create = true
standard_endpoints = { create = false, update = true, get = true, list = true, delete = true }

shared_types = [
  "VideoProcessingState",
]

[[fields]]
name = "processing_state"
type = "text"
rust_type = "crate::models::video::VideoProcessingState"
zod_type = "z.lazy(VideoProcessingState)"
owner_access = "read"
user_access = "read"

[[fields]]
name = "url"
type = "text"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "title"
type = "text"
nullable = true
owner_access = "read_write"
user_access = "read"

[[fields]]
name = "duration"
description = "Duration in seconds"
type = "int"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "author"
type = "text"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "date"
type = "date"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "metadata"
type = "json"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "read"
type = "boolean"
default_sql = "false"
indexed = true
owner_access = "read_write"
user_access = "read"

[[fields]]
name = "progress"
type = "int"
default_sql = "0"
owner_access = "read_write"
user_access = "read"

[[fields]]
name = "images"
type = "json"
omit_in_list = true
rust_type = "crate::models::video::VideoImages"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "transcript"
type = "json"
zod_type = "z.custom<VideoTranscript>()"
omit_in_list = true
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "summary"
description = "Generated summary of the video"
type = "text"
nullable = true
owner_access = "read"
user_access = "read"

[[fields]]
name = "processed_path"
type = "text"
nullable = true
owner_access = "read"
user_access = "read"

[[endpoints]]
name = "create_via_url"
path = "add_video"
method = "post"
input.url = "string"
output.id = "VideoId"
permission = "create"

[[endpoints]]
name = "rerun_stage"
path = "videos/:id/rerun/:stage"
method = "post"
output.job_id = "Uuid"
permission = "owner"

[[endpoints]]
name = "mark_read"
path = "videos/:id/mark_read"
method = "post"
input.read = "boolean"
permission = "write"

[[endpoints]]
name = "get_image"
path = "videos/:id/image/:image_id"
method = "get"
permission = "read"

